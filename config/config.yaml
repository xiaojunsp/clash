# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 机场订阅
proxy-providers:
  Airport1:
    url: "机场订阅"
    type: http
    interval: 604800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 3600
    proxy: 直连
    header: 
      User-Agent: 
        - "Clash"
        - "mihomo"
        - "Clash.meta"
    override: 
      udp: true
      down: "50 Mbps"
      up: "10 Mbps"
      skip-cert-verify: true

# 节点信息
proxies:
  - {name: 直连, type: direct, udp: true}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/mihomo/run/ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"
    - "rule-set:private_domain,cn_domain"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    - "+.wechat.com"
    - "+.qpic.cn"
    - "+.qq.com"
    - "+.wechatapp.com"
    - "+.vivox.com"
    - "+.oray.com"
    - "+.sunlogin.net"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"

# 入站  
tun:
  enable: true
  stack: mixed  # system/gvisor/mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  # mtu: 9000
  # gso: false
  # gso-max-size: 65536
  route-exclude-address-set:
    - "rule-set:cn_ip"

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.pool.ntp.org"
    - "+.ntp.tencent.com"
    - "+.ntp1.aliyun.com"
    - "+.ntp.ntsc.ac.cn"
    - "+.cn.ntp.org.cn"
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  derect-nameserver:
    - 223.5.5.5
  direct-nameserver-follow-policy: false
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy: 
    '+.baidu.com': '114.114.114.114'
    "rule-set:private_domain,cn_domain":
      - 223.5.5.5
      - 119.29.29.29
    "rule-set:gfw_domain,geolocation-!cn": 
      - tls://8.8.4.4#🚀 节点选择
      - tls://1.1.1.1#🚀 节点选择&h3=true
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  fallback: 
    - tls://8.8.4.4
    - tls://1.1.1.1
  fallback-filter: 
    geoip: true
    geoip-code: CN
    geosite:
      - gfw
    ipcidr:
      - 240.0.0.0/4
    domain:
      - '+.google.com'
      - '+.facebook.com'
      - '+.youtube.com'
 
# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pr: &pr {type: select, proxies: [🚀 节点选择, 🛩️ 高速节点, 🔯 故障转移, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🌏 奇怪的特殊接入, 🚀 手动切换, 直连]}
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [🛩️ 高速节点, 🔯 故障转移, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🌏 奇怪的特殊接入, 🚀 手动切换, 直连]}
  - {name: 🛩️ 高速节点, type: url-test, include-all: true, interval: 3600, filter: "(?=.*(HK|HongKong|香港|深港|沪港|呼港|HKT|HKBN|HGC|WTT|CMI|穗港|京港|港|JP|Japan|日本|东京|大阪|埼玉|沪日|穗日|川日|中日|泉日|杭日))^((?!(家宽|剩余|流量|0.5|0.5倍|0.5x|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍|5x)).)*$"}
  - {name: 🇨🇳🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)HK|HongKong|香港|深港|沪港|呼港|HKT|HKBN|HGC|WTT|CMI|穗港|京港|港"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)JP|Japan|日本|东京|大阪|埼玉|沪日|穗日|川日|中日|泉日|杭日"}
  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)US|America|UnitedStates|美国|美|京美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|沪美"}
  - {name: 🇸🇬 狮城节点, type: select, include-all: true, filter: "(?i)SG|Singapore|新加坡|狮城|沪新|京新|泉新|穗新|深新|杭新"}
  - {name: 🇨🇳🇹🇼 台湾节点, type: select, include-all: true, filter: "(?i)TW|Taiwan|台湾|台北|台中|新北|彰化|嘉义|桃园|CHT|新北|台|HINET"}
  - {name: 🇰🇷 韩国节点, type: select, include-all: true, filter: "(?i)KR|Korea|KOR|韩国|首尔|韩|韓"}
  - {name: 🌏 其他节点, type: select, include-all: true, filter: "(?i)AC|AR|阿根廷|奥地利|维也纳|AU|Australia|Sydney|澳大利亚|悉尼|BE|BR|Brazil|巴西|圣保罗|Canada|加拿大|蒙特利尔|温哥华|楓葉|枫叶|🇨🇦|瑞士|苏黎世|DE|Germany|德国|法兰克福|德|丹麦|ES|EU|Finland|芬兰|赫尔辛基|FR|France|法国|巴黎|UK|England|UnitedKingdom|英国|英|伦敦|Indonesia|印尼|印度尼西亚|雅加达|Ireland|爱尔兰|都柏林|India|印度|孟买|Italy|意大利|米兰|KP|朝鲜|MO|Macao|澳门|CTM|MY|Malaysia|马来西亚|NL|Netherlands|荷兰|阿姆斯特丹|PH|Philippines|菲律宾|RO|罗马尼亚|RU|Russia|俄罗斯|伯力|莫斯科|圣彼得堡|西伯利亚|新西伯利亚|京俄|杭俄|沙特|迪拜|SE|Sweden|TH|Thailand|泰国|曼谷|TR|Turkey|土耳其|伊斯坦布尔|VN|越南|ZA|南非"}
  - {name: 🌏 奇怪的特殊接入, type: select, include-all: true, filter: "(?i)IPV6|官网|本站|永久|免费|精简|懒人|垃圾|备用|客服"}
  - {name: 🔯 故障转移, type: fallback, include-all: true, tolerance: 20, interval: 3600, filter: "(?=.*(HK|HongKong|香港|深港|沪港|呼港|HKT|HKBN|HGC|WTT|CMI|穗港|京港|港|JP|Japan|日本|东京|大阪|埼玉|沪日|穗日|川日|中日|泉日|杭日))^((?!(家宽|剩余|流量|0.5|0.5倍|0.5x|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍|5x)).)*$"}
  - {name: 🚀 手动切换, type: select, include-all: true}
  - {name: 🐍 EX绅士, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 🐲 Cygames, type: select, proxies: [ 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌏 其他节点, 直连]}
  - {name: 🎮 游戏平台, type: select, proxies: [ 🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 直连]}
  - {name: 📺 巴哈姆特, type: select, include-all: true, filter: "(?i)巴哈|动画疯|動畫瘋"}
  - {name: 📺 哔哩哔哩, type: select, proxies: [ 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 直连]}
  - {name: 📹 YouTube, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 🍀 Google, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 👨🏿‍💻 GitHub, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 🐬 OneDrive, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 🪟 Microsoft, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 📲 Telegram, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 🎥 NETFLIX, type: select, include-all: true, filter: "(?i)NF|奈飞|Netflix|NETFLIX"}
  - {name: ✈️ Speedtest, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 💶 PayPal, type: select, proxies: [🚀 节点选择, 🇨🇳🇭🇰 香港节点, 🇨🇳🇹🇼 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🌏 其他节点, 🚀 手动切换, 直连]}
  - {name: 🍎 Apple, type: select, proxies: [直连, 🚀 节点选择]}
  - {name: 🎯 直连, type: select, proxies: [直连, 🚀 节点选择]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [🚀 节点选择,  直连]}

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - DOMAIN-SUFFIX,github.com/xiaojunsp,🚀 节点选择
  - RULE-SET,private_domain,直连
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,Epic,🎮 游戏平台
  - RULE-SET,Origin,🎮 游戏平台
  - RULE-SET,Sony,🎮 游戏平台
  - RULE-SET,Steam,🎮 游戏平台
  - RULE-SET,Nintendo,🎮 游戏平台
  - RULE-SET,hk,🇨🇳🇭🇰 香港节点
  - RULE-SET,japan,🇯🇵 日本节点
  - RULE-SET,dmm,🇯🇵 日本节点
  - RULE-SET,exhentai,🐍 EX绅士
  - RULE-SET,cygames,🐲 Cygames
  - RULE-SET,bilibili,📺 哔哩哔哩
  - RULE-SET,BilibiliHMT,📺 哔哩哔哩
  - RULE-SET,bahamut,📺 巴哈姆特
  - RULE-SET,proxylite,🚀 节点选择
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,gfw_domain,🚀 节点选择
  - RULE-SET,geolocation-!cn,🚀 节点选择
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,cn_ip,🎯 直连
  - MATCH,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 604800, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 604800, behavior: domain, format: mrs}
  class: &class {type: http, interval: 604800, behavior: classical, format: text}
rule-providers: 
  hk: { <<: *class, url: "https://raw.githubusercontent.com/xiaojunsp/clash/main/rules/hk.list"}
  japan: { <<: *class, url: "https://raw.githubusercontent.com/xiaojunsp/clash/main/rules/japan.list"}
  dmm: { <<: *class, url: "https://raw.githubusercontent.com/xiaojunsp/clash/main/rules/dmm.list"}
  exhentai: { <<: *class, url: "https://raw.githubusercontent.com/xiaojunsp/clash/main/rules/exhentai.list"}
  cygames: { <<: *class, url: "https://raw.githubusercontent.com/xiaojunsp/clash/main/rules/cygames.list"}
  Epic: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list"}
  Origin: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Origin.list"}
  Sony: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list"}
  Steam: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list"}
  Nintendo: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list"}
  bilibili: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list"}
  BilibiliHMT: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list"}
  bahamut: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bahamut.list"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: { <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list"}  
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
